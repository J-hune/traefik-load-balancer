version: '3.7'

services:

# =============================================================
#
#	 TRAEFIK - Reverse proxy
#
# =============================================================

  traefik:
    image: traefik:v2.10.5
    restart: always
    container_name: traefik
    hostname: traefik
    ports:
      - "80:80"
      - "443:443"
    command:
      # API Settings
      - --api.insecure=true # Enable insecure API (Do not use in production)
      - --api.dashboard=true # Enable the Traefik dashboard
      - --api.debug=true # Enable API debugging

      # Log Settings
      - --log.level=DEBUG # Set log level to DEBUG

      # Provider Settings
      - --providers.docker=true # Enable Docker provider
      - --providers.docker.exposedbydefault=false # Do not expose all containers by default
      - --providers.file.filename=/dynamic.toml # Configuration file for dynamic routing
      - --providers.docker.network=proxy # Specify the Docker network for containers

      # Entrypoints Settings
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      # Certificate Settings (Let's Encrypt)
      - --certificatesresolvers.myresolver.acme.tlschallenge=true # Use TLS-ALPN-01 challenge for ACME
      - --certificatesresolvers.myresolver.acme.email=${ACME_EMAIL} # Email for Let's Encrypt registration
      - --certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json # Store ACME data
    volumes:
      - ./letsencrypt:/letsencrypt # Volume for TLS certificates
      - /var/run/docker.sock:/var/run/docker.sock # Volume for Docker administration
      - ./dynamic.toml:/dynamic.toml # Volume for dynamic configuration file **ref: line 31
    labels:
      - "traefik.enable=true" # Enable Traefik for this container
      - "traefik.http.routers.traefik.rule=Host(`localhost`)" # Define a rule for the Traefik router
      - "traefik.http.routers.traefik.service=api@internal" # Service name for the Traefik router
    networks:
      - proxy

networks:
  proxy:
    name: proxy # Define the 'proxy' network
